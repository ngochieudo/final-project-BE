// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @default("")
  image     String?
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isAdmin   Boolean  @default(false)

  reviews      Review[]
  reservations Reservation[]
  favorites    Favorite[]
}

model Listing {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  description   String
  imageSrc      String
  createAt      DateTime @default(now())
  categoryId    String   @db.ObjectId
  roomCount     Int
  bathroomCount Int
  guestCount    Int
  locationValue String
  price         Float

  category     Category      @relation(fields: [categoryId], references: [id])
  reservations Reservation[]
  reviews      Review[]
  favorites    Favorite[]
}

model Category {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  label       String
  description String
  icon        String
  createAt    DateTime @default(now())

  listings Listing[] @relation
}

model Favorite {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  listingId String   @db.ObjectId
  createdAt DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id])
  listing Listing @relation(fields: [listingId], references: [id])

  @@unique([userId, listingId])
}

model Reservation {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @db.ObjectId
  listingId  String   @db.ObjectId
  startDate  DateTime
  endDate    DateTime
  totalPrice Int
  createdAt  DateTime @default(now())
  status     String   @default("Confirmed")
  refundIssued Boolean @default(false)
  refundAmount Int?
  paymentIntentId String?
  

  user    User    @relation(fields: [userId], references: [id])
  listing Listing @relation(fields: [listingId], references: [id])
}


model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  rating    Int
  listingId String   @db.ObjectId
  content   String
  createdAt DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id])
  listing Listing @relation(fields: [listingId], references: [id])
}
